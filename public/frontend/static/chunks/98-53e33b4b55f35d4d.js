"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[98],{1759:(t,e,n)=>{n.d(e,{S:()=>a});class a{static getInstance(){return a.instance||(a.instance=new a),a.instance}async detectTenant(){try{let t=await fetch("/api-server-multi-tenant.php/tenant-info"),e=await t.json();if(e.success)return this.tenantInfo=e.data,this.tenantInfo}catch(t){console.error("Failed to detect tenant:",t)}return null}getTenantInfo(){return this.tenantInfo}getApiBaseUrl(){{let t="http://127.0.0.1:8000",e="https:"===window.location.protocol,n=t.startsWith("http://localhost")||t.startsWith("http://127.0.0.1"),a=e&&t.startsWith("http:");return!t||n||a?"".concat(window.location.origin,"/api-server-multi-tenant.php"):t}}getTableUrl(t){return this.tenantInfo?this.tenantInfo.table_url_pattern.replace("{table_id}",t):"http://localhost:3001/table/".concat(t)}getFrontendUrl(){return this.tenantInfo?this.tenantInfo.frontend_url:"http://localhost:3001"}constructor(){this.tenantInfo=null}}},30098:(t,e,n)=>{n.d(e,{u:()=>h});var a=n(67e3),r=n(1759);let o=a.U.getInstance(),s=o.getApiBaseUrl();o.getFrontendUrl();let i={success:!0,data:{items:[],categories:[]}},c={id:1,name:"Restaurant",address:"",city:"",state:"",telephone:"",description:""},l=r.S.getInstance();class d{async request(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n="".concat(this.baseURL).concat(t),a={headers:{Accept:"application/json","Content-Type":"application/json",...e.headers},...e};try{let t=await fetch(n,a);if(!t.ok)throw Error("HTTP error! status: ".concat(t.status));return await t.json()}catch(e){throw console.error("API request failed for ".concat(t,":"),e),e}}getApiBaseUrl(){return l.getApiBaseUrl()}async getMenu(){try{let t=this.envConfig.getApiEndpoint("/menu"),e=await fetch(t);return await e.json()}catch(t){return console.error("Failed to fetch menu from API, using fallback:",t),i}}async getCategories(){try{let t=this.envConfig.getApiEndpoint("/categories"),e=await fetch(t);return await e.json()}catch(t){return console.log("Using fallback categories due to API error:",t),{success:!0,data:i.data.categories||[]}}}async getMenuItems(t){try{let e=(await this.getMenu()).data.items||[];return t&&(e=e.filter(e=>e.category_id===t)),{success:!0,data:e}}catch(t){return console.log("Using fallback menu items due to API error:",t),{success:!0,data:i.data.items||[]}}}async submitOrder(t){try{let e=this.envConfig.getApiEndpoint("/orders"),n=await fetch(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)});if(!n.ok)throw Error("HTTP error! status: ".concat(n.status));return await n.json()}catch(t){throw console.error("Order submission failed:",t),t}}async getUserOrders(t){try{let e=this.envConfig.getApiEndpoint("/user/".concat(t,"/orders")),n=await fetch(e);return await n.json()}catch(t){return console.log("User orders fetch failed:",t),{success:!0,data:[]}}}async getTableByQrCode(t){try{return{success:!0,data:{table_id:"7",table_name:"Table 7",restaurant_id:1}}}catch(t){return console.log("QR code processing failed:",t),{success:!1,message:"Invalid QR code"}}}async callWaiter(t,e){try{let n=this.envConfig.getApiEndpoint("/waiter-call"),a=await fetch(n,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({table_id:t,message:e})});if(!a.ok)throw Error("HTTP error! status: ".concat(a.status));return await a.json()}catch(t){throw console.error("Waiter call failed:",t),t}}async getSettings(){try{let t=this.envConfig.getApiEndpoint("/settings"),e=await fetch(t);return await e.json()}catch(t){return console.log("Settings fetch failed:",t),{success:!0,data:{restaurant_name:"PayMyDine Restaurant",currency:"EUR",tax_rate:.19,service_charge:.1}}}}async getRestaurantInfo(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];try{let t=this.envConfig.getApiEndpoint("/restaurant"),e=await fetch(t);return await e.json()}catch(t){return console.log("Restaurant info fetch failed, using fallback:",t),{success:!0,data:c}}}async getOrderStatus(t){try{let e=this.envConfig.getApiEndpoint("/order-status?order_id=".concat(t)),n=await fetch(e);return await n.json()}catch(t){throw console.error("Order status fetch failed:",t),t}}async updateOrderStatus(t,e){try{let n=this.envConfig.getApiEndpoint("/order-status"),a=await fetch(n,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({order_id:t,status_id:e})});if(!a.ok)throw Error("HTTP error! status: ".concat(a.status));return await a.json()}catch(t){throw console.error("Order status update failed:",t),t}}async getTableInfo(t,e){try{let n=new URLSearchParams;t&&n.append("table_id",t),e&&n.append("qr_code",e);let a=this.envConfig.getApiEndpoint("/table-info?".concat(n)),r=await fetch(a);return await r.json()}catch(t){return console.error("Table info fetch failed:",t),{success:!1,error:"Failed to fetch table information"}}}async getTableMenu(t,e){try{let n=new URLSearchParams;n.append("table_id",t),e&&n.append("location_id",e.toString());let a=this.envConfig.getApiEndpoint("/table-menu?".concat(n.toString())),r=await fetch(a);return await r.json()}catch(t){return console.log("Table menu fetch failed, using fallback:",t),i}}async getTableOrders(t){try{let e=this.envConfig.getApiEndpoint("/table-orders?table_id=".concat(t)),n=await fetch(e);return await n.json()}catch(t){return console.error("Table orders fetch failed:",t),{success:!1,error:"Failed to fetch table orders"}}}async getThemeSettings(){try{let t=window.location.origin,e=await fetch("".concat(t,"/simple-theme"),{headers:{Accept:"application/json"}});if(!e.ok)throw Error("HTTP ".concat(e.status));return await e.json()}catch(t){return console.error("Failed to fetch theme settings:",t),{success:!0,data:{theme_id:"clean-light",primary_color:"#E7CBA9",secondary_color:"#EFC7B1",accent_color:"#3B3B3B",background_color:"#FAFAFA"}}}}async updateThemeSettings(t){try{let e=this.envConfig.getApiEndpoint("/theme-settings"),n=await fetch(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)});if(!n.ok)throw Error("HTTP error! status: ".concat(n.status));return await n.json()}catch(t){return console.error("Failed to update theme settings:",t),{success:!1,message:"Failed to update theme settings"}}}async getTables(){try{let t=this.envConfig.getApiEndpoint("/tables"),e=await fetch(t);return await e.json()}catch(t){return{success:!1,error:"Failed to fetch tables"}}}async createTable(t){try{let e=this.envConfig.getApiEndpoint("/create-table"),n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await n.json()}catch(t){return{success:!1,error:"Failed to create table"}}}async updateTable(t,e){try{let n=this.envConfig.getApiEndpoint("/update-table"),a=await fetch(n,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({table_id:t,...e})});return await a.json()}catch(t){return{success:!1,error:"Failed to update table"}}}async deleteTable(t){try{let e=this.envConfig.getApiEndpoint("/delete-table?table_id=".concat(t)),n=await fetch(e,{method:"DELETE"});return await n.json()}catch(t){return{success:!1,error:"Failed to delete table"}}}async generateQRCode(t){try{let e=this.envConfig.getApiEndpoint("/generate-qr"),n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({table_id:t})});return await n.json()}catch(t){return{success:!1,error:"Failed to generate QR code"}}}async getTableStats(t){try{let e=this.envConfig.getApiEndpoint("/table-stats?table_id=".concat(t)),n=await fetch(e);return await n.json()}catch(t){return{success:!1,error:"Failed to fetch table stats"}}}constructor(t=s){this.baseURL=t,this.envConfig=a.U.getInstance()}}let h=new d},67e3:(t,e,n)=>{n.d(e,{U:()=>a});class a{static getInstance(){return a.instance||(a.instance=new a),a.instance}detectEnvironment(){let t=window.location.hostname;if("localhost"===t||"127.0.0.1"===t)return{apiBaseUrl:"http://127.0.0.1:8000",frontendUrl:"http://localhost:3000",wsUrl:"ws://localhost:8080",environment:"development",tenantDetection:!1,defaultTenant:"paymydine"};{let e=window.location.protocol,n=t||"paymydine.com";return{apiBaseUrl:"".concat(e,"//").concat(n),frontendUrl:"".concat(e,"//").concat(n),wsUrl:"".concat("https:"===e?"wss:":"ws:","//").concat(n),environment:"production",tenantDetection:!0,defaultTenant:"paymydine"}}}getConfig(){return this.config}getApiBaseUrl(){return this.config.apiBaseUrl}getFrontendUrl(){return this.config.frontendUrl}getWsUrl(){return this.config.wsUrl}isProduction(){return"production"===this.config.environment}isDevelopment(){return"development"===this.config.environment}shouldDetectTenant(){return this.config.tenantDetection}getDefaultTenant(){return this.config.defaultTenant}getApiEndpoint(t){return this.isProduction()&&this.shouldDetectTenant()?"/api/v1".concat(t):"".concat(this.getApiBaseUrl(),"/api/v1").concat(t)}constructor(){this.config=this.detectEnvironment()}}}}]);